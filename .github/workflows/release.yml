name: release-pipeline

on:
  release:
    types:
      - created

jobs:
  release-job:
    runs-on: ubuntu-latest
    env:
      PYPI_TOKEN: ${{ secrets.PYPI_TOKEN_PYMC }}
    steps:
    - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.7
    # TODO: ideally, this pipeline should run parallelized tests in upstream jobs..
    #- name: Install test tooling
    #  run: |
    #    pip install pytest pytest-cov nose nose-parameterized
    #    pip install -r requirements.txt
    #- name: Run tests
    #  run: |
    #    pytest --cov=./pymc --cov-report term-missing pymc/
    - name: Install release tooling
      run: |
        pip install twine wheel
    - name: Build package
      run: |
        python setup.py sdist bdist_wheel
    - name: Check version number match
      run: |
        echo "GITHUB_REF: ${GITHUB_REF}"
        # The GITHUB_REF should be something like "refs/tags/v1.2.3"
        # Make sure the package version is the same as the tag
        grep -Rq "^Version: ${GITHUB_REF:11}$" pymc.egg-info/PKG-INFO
    - name: Publish to PyPI
      run: |
        twine check dist/*
        twine upload --repository pypi --username __token__ --password ${PYPI_TOKEN} dist/*
  test-install-job:
    needs: release-job
    runs-on: ubuntu-latest
    steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.7
    - name: Give PyPI a chance to update the index
      run: sleep 240
    - name: Install from PyPI
      run: |
        pip install pymc==${GITHUB_REF:11}
